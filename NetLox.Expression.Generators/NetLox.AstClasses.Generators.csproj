<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<LangVersion>11.0</LangVersion>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
		<IsRoslynComponent>true</IsRoslynComponent>
		<PreserveCompilationContext>true</PreserveCompilationContext>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
		<Version>1.0.1</Version>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.4.0" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<!-- Generator dependencies -->
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3"  GeneratePathProperty="true" PrivateAssets="all" />
	</ItemGroup>

	<PropertyGroup>
		<GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
	</PropertyGroup>

	<Target Name="GetDependencyTargetPaths">
		<ItemGroup>
			<TargetPathWithTargetPlatformMoniker Include="$(PkgNewtonsoft_Json)\lib\netstandard2.0\*.dll" IncludeRuntimeDependency="false" />
			<!-- Pack both our DLL and the dependencies into a generated Nuget Package -->
			<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
			<None Include="$(PkgNewtonsoft_Json)\lib\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
		</ItemGroup>
	</Target>
	
</Project>
